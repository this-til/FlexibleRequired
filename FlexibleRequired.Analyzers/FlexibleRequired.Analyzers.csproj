<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <LangVersion>latest</LangVersion>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <DevelopmentDependency>true</DevelopmentDependency>
        <NoPackageAnalysis>true</NoPackageAnalysis>
        <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>

        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IsRoslynComponent>true</IsRoslynComponent>

        <RootNamespace>FlexibleRequired.Analyzers</RootNamespace>
        <AssemblyName>FlexibleRequired.Analyzers</AssemblyName>
        
        <!-- Package metadata -->
        <PackageId>FlexibleRequired.Analyzers</PackageId>
        <PackageVersion>1.0.0</PackageVersion>
        <Authors>FlexibleRequired</Authors>
        <Description>Analyzer for flexible required member validation</Description>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.8.0" PrivateAssets="all" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.8.0" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Update="Resources.resx">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Resources.Designer.cs</LastGenOutput>
        </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
        <Compile Update="Resources.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>Resources.resx</DependentUpon>
        </Compile>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\FlexibleRequired\FlexibleRequired.csproj">
            <Private>true</Private>
            <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
            <IncludeAssets>FlexibleRequired.dll</IncludeAssets>
        </ProjectReference>
    </ItemGroup>

    <ItemGroup>
        <!-- 包含主分析器程序集 -->
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers\dotnet\cs\$(AssemblyName).dll" Visible="false" />
        <!-- 包含FlexibleRequired.dll到分析器目录（供分析器运行时使用） -->
        <None Include="$(OutputPath)\FlexibleRequired.dll" Pack="true" PackagePath="analyzers\dotnet\cs\FlexibleRequired.dll" Visible="false" />
        <!-- 包含FlexibleRequired.dll到lib目录（供用户项目引用） -->
        <None Include="$(OutputPath)\FlexibleRequired.dll" Pack="true" PackagePath="lib\netstandard2.0\FlexibleRequired.dll" Visible="false" />
        <!-- 包含README.md文件到NuGet包 -->
        <None Include="..\README.md" Pack="true" PackagePath="\" Visible="false" />
        <!-- 包含LICENSE.txt文件到NuGet包 -->
        <None Include="..\LICENSE.txt" Pack="true" PackagePath="\" Visible="false" />
    </ItemGroup>
    
    <!-- 确保依赖项被复制到输出目录 -->
    <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="Build" BeforeTargets="_GetPackageFiles">
        <ItemGroup>
            <!-- 获取所有项目引用的输出程序集 -->
            <BuildOutputInPackage Include="$(OutputPath)FlexibleRequired.dll">
                <TargetPath>analyzers\dotnet\cs</TargetPath>
                <PackagePath>analyzers\dotnet\cs\FlexibleRequired.dll</PackagePath>
            </BuildOutputInPackage>
            <BuildOutputInPackage Include="$(OutputPath)FlexibleRequired.dll">
                <TargetPath>lib\netstandard2.0</TargetPath>
                <PackagePath>lib\netstandard2.0\FlexibleRequired.dll</PackagePath>
            </BuildOutputInPackage>
        </ItemGroup>
    </Target>

</Project>
